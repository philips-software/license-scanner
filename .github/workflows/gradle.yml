name: Java CI with Gradle

on:
  push:

jobs:
  build-and-test:
    name: Build gradle project 

    runs-on: [self-hosted, research] 
    container: python:3.8.6

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache build artifacts
        uses: actions/cache@v2.1.3
        with:
          path: | 
            build/test-results/**/*.xml
            build/libs/*.jar
          key: license-scanner-${{ github.sha }}

      - name: Gradle cache
        uses: actions/cache@v2.1.3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Setup java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: '11'

      - name: Install scancode 
        run: pip install scancode-toolkit[full]

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build -x test

      - name: Tests
        run: ./gradlew test

  create-docker-image:
    name: "Create docker image"
    needs: build-and-test
    runs-on: [self-hosted, research]
    # Don't publish when build is skipped
    if: success() || failure()

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache build artifacts
        uses: actions/cache@v2.1.3
        with:
          path: | 
            build/test-results/**/*.xml
            build/libs/*.jar
          key: license-scanner-${{ github.sha }}

      - name: Build Docker Images
        uses: philips-software/docker-ci-scripts@v3.1.0
        with:
          dockerfile: docker/Dockerfile
          image-name: license-scanner 
          tags: 0 0.3 0.3.0 v0.3.0 latest
        env:
          DOCKER_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          DOCKER_PASSWORD: '${{ secrets.ARTIFACTORY_TOKEN }}'
          DOCKER_REGISTRY: dl-innersource-docker-local.artifactory-ehv.ta.philips.com
          GITHUB_ORGANIZATION: philips-internal

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: [self-hosted, research]
    # Don't publish when build is skipped
    if: success() || failure()

    steps:
      - name: Cache build artifacts
        uses: actions/cache@v2.1.3
        with:
          path: | 
            build/test-results/**/*.xml
            build/libs/*.jar 
          key: license-scanner-${{ github.sha }}

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.7
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
          comment_title: Unit Test Statistics
          hide_comments: all but latest
          comment_on_pr: true
          files: build/test-results/**/*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false
